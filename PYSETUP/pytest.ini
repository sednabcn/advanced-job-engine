[pytest]
# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts = 
    -v                              # Verbose output
    --tb=short                      # Shorter traceback format
    --strict-markers                # Raise error on unknown markers
    --cov=src                       # Coverage for src/ directory
    --cov-report=html               # HTML coverage report
    --cov-report=term-missing       # Show missing lines in terminal
    --cov-fail-under=80             # Fail if coverage < 80%
    -ra                             # Show summary of all test outcomes
    --maxfail=5                     # Stop after 5 failures
    
# Markers for organizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, multi-component)
    slow: Slow tests (network, file I/O)
    smoke: Smoke tests (critical functionality)
    cv_parser: CV parsing tests
    job_parser: Job parsing tests
    matcher: Matching algorithm tests
    learning: Learning plan tests
    tracking: Progress tracking tests
    generators: Content generation tests
    workflow: End-to-end workflow tests

# Coverage options
[coverage:run]
source = src
omit = 
    */tests/*
    */conftest.py
    */__init__.py
    */setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract