[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "advanced-job-engine"
version = "1.0.0"
description = "AI-powered job matching and career development system"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["job-search", "cv-analysis", "career-development", "learning-plans"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    # Add your runtime dependencies here
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-watch>=4.2.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/advanced-job-engine"
Documentation = "https://github.com/yourusername/advanced-job-engine/docs"
Repository = "https://github.com/yourusername/advanced-job-engine"
Issues = "https://github.com/yourusername/advanced-job-engine/issues"

# ============================================================================
# BLACK Configuration
# ============================================================================
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# ============================================================================
# ISORT Configuration
# ============================================================================
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = [
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
]

# ============================================================================
# PYTEST Configuration
# ============================================================================
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "-ra",
]

markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (slower, multi-component)",
    "slow: Slow tests (network, file I/O)",
    "smoke: Smoke tests (critical functionality)",
    "cv_parser: CV parsing tests",
    "job_parser: Job parsing tests",
    "matcher: Matching algorithm tests",
    "learning: Learning plan tests",
    "tracking: Progress tracking tests",
    "generators: Content generation tests",
    "workflow: End-to-end workflow tests",
    "requires_files: Tests requiring external files",
]

filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# ============================================================================
# COVERAGE Configuration
# ============================================================================
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/conftest.py",
    "*/__init__.py",
    "*/setup.py",
    "*/migrations/*",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# ============================================================================
# MYPY Configuration
# ============================================================================
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
show_error_codes = true
show_error_context = true
pretty = true

# Per-module options
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "setup"
ignore_errors = true